/*
* Copyright © 2016-2019 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/

[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Technical name",
				"propertyKeyword": "code",
				"propertyType": "text",
				"regex": "^[a-z_0-9]{0,48}$"
			},
			{
				"propertyName": "Partition key",
				"propertyKeyword": "compositePartitionKey",
				"propertyType": "primaryKeySetter",
				"abbr": "pk,PK"
			}, 
			{
				"propertyName": "Clustering key",
				"propertyKeyword": "compositeClusteringKey",
				"propertyType": "primaryKeySetter",
				"abbr": "pk,CK",
				"attributeList": [
					{ "name": "ascending", "abbr": "\u2191" },
					{ "name": "descending", "abbr": "\u2193" }
				]
			},
			{
				"propertyName": "If not exists",
				"propertyKeyword": "tableIfNotExist",
				"propertyTooltip": "If specified, creates the table only when it does not exist. The creation of view succeeds (no error is thrown) if the specified view already exists in the system. This parameter is mutually exclusive to OR REPLACE and cannot be specified together.",
				"defaultValue": false,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Options",
				"propertyType": "block",
				"propertyKeyword": "tableOptions",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Bloom filter fp chance",
						"propertyKeyword": "bloomFilterFalsePositiveChance",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"maxValue": 1,
						"step": 0.01
					},
					{
						"propertyName": "Caching",
						"propertyKeyword": "caching",
						"propertyType": "block",
						"structure": [
							{
								"propertyName": "Keys",
								"propertyKeyword": "keys",
								"propertyType": "text"
							},
							{
								"propertyName": "Rows per partition",
								"propertyKeyword": "rowsPerPartition",
								"propertyType": "text"
							}
						]
					},
					{
						"propertyName": "CDC log",
						"propertyKeyword": "cdc",
						"propertyType": "checkbox"
					},
					{
						"propertyName": "Dclocal read repair chance",
						"propertyKeyword": "localReadRepairChance",
						"propertyTooltip": "Dclocal read repair chance",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"maxValue": 1,
						"step": 0.01
					},
					{
						"propertyName": "Default time to live",
						"propertyKeyword": "defaultTtl",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"maxValue": 630720000
					},
					{
						"propertyName": "Gc grace seconds",
						"propertyKeyword": "gcGraceSeconds",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0
					},
					{
						"propertyName": "Memtable flush period in ms",
						"propertyKeyword": "memtableFlushPeriod",
						"propertyTooltip": "Memtable flush period in ms",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0
					},
					{
						"propertyName": "Min index interval",
						"propertyKeyword": "minIndexInterval",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 1
					},
					{
						"propertyName": "Max index interval",
						"propertyKeyword": "maxIndexInterval",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 1
					},
					{
						"propertyName": "Read repair chance",
						"propertyKeyword": "readRepairChance",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"maxValue": 1,
						"step": 0.01
					},
					{
						"propertyName": "Speculative retry",
						"propertyKeyword": "speculativeRetry",
						"propertyType": "text"
					},
					{
						"propertyName": "Crc check chance",
						"propertyKeyword": "crcCheckChance",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"maxValue": 1,
						"step": 0.1
					},
					{
						"propertyName": "Compression",
						"propertyKeyword": "compression",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Compaction",
						"propertyKeyword": "compaction",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Compact storage",
						"propertyKeyword": "compactStorage",
						"propertyType": "checkbox"
					},
					{
						"propertyName": "Other properties",
						"propertyType": "group",
						"propertyKeyword": "otherProperties",
						"structure": [
							{
								"propertyName": "name",
								"propertyKeyword": "name",
								"propertyType": "text"
							},
							{
								"propertyName": "value",
								"propertyKeyword": "value",
								"propertyType": "details",
								"template": "textarea",
								"valueType": "string",
								"markdown": false
							}
						]
					}
				]
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "comments",
				"propertyTooltip": "comments",
				"propertyType": "details",
				"template": "textarea",
				"valueType": "string"
			}
		],
		"columnsRatio": [3.7, 5]
	},
	{
		"lowerTab": "Indexes",
		"structure": [
			{
				"propertyName": "Indexes",
				"propertyType": "group",
				"propertyKeyword": "SecIndxs",
				"erdIndexAbbr": "2I",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Name",
						"propertyKeyword": "name",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Activated",
						"propertyKeyword": "isActivated",
						"propertyTooltip": "Deactivated item will be not included in FE script",
						"propertyType": "checkbox",
						"defaultValue": true
					},
					{
						"propertyName": "Type",
						"propertyType": "select",
						"propertyKeyword": "indexType",
						"defaultValue": "secondary",
						"options": [
							{ "name": "Secondary", "value": "secondary" },
							{ "name": "Custom", "value": "custom" }
						]
					},
					{
						"propertyName": "Key",
						"propertyKeyword": "SecIndxKey",
						"propertyType": "fieldList",
						"template": "orderedList",
						"attributeList": [
							"",
							"keys",
							"values",
							"entries",
							"full"
						],
						"templateOptions": {
							"maxFields": 1
						}
					},
					{
						"propertyName": "If not exists",
						"propertyKeyword": "indexIfNotExist",
						"propertyTooltip": "If specified, creates the index only when it does not exist. The creation of view succeeds (no error is thrown) if the specified view already exists in the system. This parameter is mutually exclusive to OR REPLACE and cannot be specified together.",
						"defaultValue": false,
						"propertyType": "checkbox"
					},
					{
						"propertyName": "Is SASI index",
						"propertyKeyword": "isSASI",
						"defaultValue": false,
						"propertyType": "checkbox",
						"dependency":{
							"key": "indexType",
							"value": "custom"
						}
					},
					{
						"propertyName": "Options",
						"propertyType": "block",
						"propertyKeyword": "customOptions",
						"dependency": {
							"type": "and",
							"values":[
								{
									"key": "indexType",
									"value": "custom"
								},
								
								{
									"type": "not",
									"values": {
										"key": "isSASI",
										"value": true									}
								}
							]
						},
						"structure": [
							{
								"propertyName": "case_sensitive",
								"propertyKeyword": "case_sensitive",
								"propertyType": "checkbox",
								"propertyTooltip": "Ignore case in matching string values.",
								"defaultValue": true
							},
							{
								"propertyName": "normalize",
								"propertyKeyword": "normalize",
								"propertyType": "checkbox",
								"propertyTooltip": "When set to true, perform Unicode normalization on indexed strings."
							},
							{
								"propertyName": "ascii",
								"propertyKeyword": "ascii",
								"propertyType": "checkbox",
								"propertyTooltip": "When set to true, SAI converts alphabetic, numeric, and symbolic characters that are not in the Basic Latin Unicode block (the first 127 ASCII characters) to the ASCII equivalent, if one exists."
							},
							{
								"propertyName": "similarity_function",
								"propertyKeyword": "similarity_function",
								"propertyType": "select",
								"propertyTooltip": "Vector search relies on computing the similarity or distance between vectors to identify relevant matches. The similarity function is used to compute the similarity between two vectors.",
								"options": [
									"",
									"EUCLIDEAN",
									"DOT_PRODUCT",
									"COSINE"
								],
								"dependency": {
									"type": "not",
									"values": [
										{
											"level": "model",
											"key": "dbVersion",
											"value": "2.x"
										},
										{
											"level": "model",
											"key": "dbVersion",
											"value": "3.x"
										},
										{
											"level": "model",
											"key": "dbVersion",
											"value": "4.x"
										},
										{
											"level": "model",
											"key": "dbVersion",
											"value": "DSE 4.x"
										}
									]
								}
							}
						]
					},
					{
						"propertyName": "Options",
						"propertyType": "block",
						"propertyKeyword": "customOptions",
						"dependency": {
							"type": "and",
							"values":[
								{
									"key": "indexType",
									"value": "custom"
								},
								{
									"key": "isSASI",
									"value": true
								}
							]
						},
						"structure": [
							{
								"propertyName": "case_sensitive",
								"propertyKeyword": "case_sensitive",
								"propertyType": "checkbox",
								"propertyTooltip": "Ignore case in matching string values.",
								"defaultValue": true
							},
							{
								"propertyName": "normalize",
								"propertyKeyword": "normalize",
								"propertyType": "checkbox",
								"propertyTooltip": "When set to true, perform Unicode normalization on indexed strings."
							},
							{
								"propertyName": "analyzed",
								"propertyKeyword": "analyzed",
								"propertyType": "checkbox",
								"propertyTooltip": "analyzed option. When set to true, the literal column is analyzed using the specified analyzer"
							},
							{
								"propertyName": "is literal",
								"propertyKeyword": "isLiteral",
								"propertyType": "checkbox",
								"propertyTooltip": "is_literal option. When set to true, designates a column as literal."
							},
							{
								"propertyName": "tokenization stemming",
								"propertyKeyword": "tokenizationEnableStemming",
								"propertyType": "checkbox",
								"propertyTooltip": "tokenization_enable_stemming option. When set to true, reduce words to their base form."
							},
							{
								"propertyName": "tokenization lowercase",
								"propertyKeyword": "tokenizationNormalizeLowercase",
								"propertyType": "checkbox",
								"propertyTooltip": "tokenization_normalize_lowercase option. When set to true, use lowercase."
							},
							{
								"propertyName": "tokenization uppercase",
								"propertyKeyword": "tokenizationNormalizeUppercase",
								"propertyType": "checkbox",
								"propertyTooltip": "tokenization_normalize_uppercase option. When set to true, use uppercase."
							},
							{
								"propertyName": "normalize lowercase",
								"propertyKeyword": "normalizeLowercase",
								"propertyType": "checkbox",
								"propertyTooltip": "normalize_lowercase option. When set to true, index all strings as lowercase."
							},
							{
								"propertyName": "normalize uppercase",
								"propertyKeyword": "normalizeUppercase",
								"propertyType": "checkbox",
								"propertyTooltip": "normalize_uppercase option. When set to true, index all strings as uppercase."
							},
							{
								"propertyName": "tokenization locale",
								"propertyKeyword": "tokenizationLocale",
								"propertyTooltip": "tokenization_locale option.",
								"propertyType": "text"
							},
							{
								"propertyName": "skip stop words",
								"propertyKeyword": "tokenizationSkipStopWords",
								"propertyTooltip": "tokenization_skip_stop_words option.",
								"propertyType": "text"
							},
							{
								"propertyName": "mode",
								"propertyKeyword": "mode",
								"propertyTooltip": "mode option.",
								"propertyType": "text"
							},
							{
								"propertyName": "analyzer class",
								"propertyKeyword": "analyzerClass",
								"propertyType": "select",
								"propertyTooltip": "analyzer_class option.",
								"options": [
									"",
									"org.apache.cassandra.index.sasi.analyzer.StandardAnalyzer",
									"org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer"
								]
							},
							{
								"propertyName": "max compaction flush mb",
								"propertyKeyword": "maxCompactionFlushMemoryInMb",
								"propertyType": "numeric",
								"valueType": "number",
								"propertyTooltip": "max_compaction_flush_memory_in_mb option.",
								"minValue": 0,
								"step": 1
							}
						]
					},
					{
						"propertyName": "Description",
						"propertyKeyword": "SecIndxDescription",
						"propertyTooltip": "description",
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Comments",
						"propertyKeyword": "SecIndxComments",
						"shouldValidate": false,
						"propertyTooltip": "comments",
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Search Index",
				"propertyKeyword": "searchIndexDivider",
				"propertyType": "empty",
				"dependency":{
					"type": "not",
					"values": {
						"level": "model",
						"key": "dbVersion",
						"value": "Astra DB"
					}
				}
			},
			{
				"propertyName": "Enable",
				"propertyType": "checkbox",
				"propertyKeyword": "searchIndex",
				"dependency":{
					"type": "not",
					"values": {
						"level": "model",
						"key": "dbVersion",
						"value": "Astra DB"
					}
				}
			},
			{
				"propertyName": "Columns",
				"propertyType": "group",
				"erdIndexAbbr": "SI",
				"propertyKeyword": "searchIndexColumns",
				"propertyTooltip": "",
				"dependency": {
					"type": "and",
					"values":[
						{
							"key": "searchIndex",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"level": "model",
								"key": "dbVersion",
								"value": "Astra DB"
							}
						}
					]
				},
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "key",
						"propertyType": "fieldList",
						"template": "orderedList",
						"templateOptions": {
							"maxFields": 1
						}
					},
					{
						"propertyName": "copyField",
						"propertyKeyword": "copyField",
						"propertyType": "checkbox",
						"propertyTooltip": "Set to true to create a new field copied from the specified columns with type StrField. Duplicates the data from the original field into the new field. Use for columns that require both search and faceting."
					},
					{
						"propertyName": "docValues",
						"propertyKeyword": "docValues",
						"propertyType": "checkbox",
						"propertyTooltip": "Creates a forward index on each specified column."
					},
					{
						"propertyName": "excluded",
						"propertyKeyword": "excluded",
						"propertyType": "checkbox",
						"propertyTooltip": "exclude the listed columns and all fields in the columns from the index."
					},
					{
						"propertyName": "indexed",
						"propertyKeyword": "indexed",
						"propertyType": "checkbox",
						"propertyTooltip": "include the specified fields in the index.",
						"defaultValue": true
					},
					{
						"propertyName": "lowerCase",
						"propertyKeyword": "lowerCase",
						"propertyType": "checkbox",
						"propertyTooltip": "use the LowerCaseStrField field type."
					}
				]
			},
			{
				"propertyName": "Profiles",
				"propertyType": "multipleCheckboxSelect",
				"propertyKeyword": "searchIndexProfiles",
				"propertyTooltip": "",
				"dependency": {
					"type": "and",
					"values":[
						{
							"key": "searchIndex",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"level": "model",
								"key": "dbVersion",
								"value": "Astra DB"
							}
						}
					]
				},
				"options": [
					"spaceSavingNoJoin",
					"spaceSavingNoTextfield",
					"spaceSavingSlowTriePrecision"
				]
			},
			{
				"propertyName": "If not exists",
				"propertyKeyword": "searchIndexIfNotExist",
				"propertyTooltip": "If specified, creates the search index only when it does not exist. The creation of view succeeds (no error is thrown) if the specified view already exists in the system. This parameter is mutually exclusive to OR REPLACE and cannot be specified together.",
				"defaultValue": false,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values":[
						{
							"key": "searchIndex",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"level": "model",
								"key": "dbVersion",
								"value": "Astra DB"
							}
						}
					]
				}
			},
			{
				"propertyName": "Config",
				"propertyType": "block",
				"propertyKeyword": "searchIndexConfig",
				"propertyTooltip": "",
				"dependency": {
					"type": "and",
					"values":[
						{
							"key": "searchIndex",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"level": "model",
								"key": "dbVersion",
								"value": "Astra DB"
							}
						}
					]
				},
				"structure": [
					{
						"propertyName": "autoCommitTime",
						"propertyKeyword": "autoCommitTime",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"defaultValue": 10000
					},
					{
						"propertyName": "defaultQueryField",
						"propertyKeyword": "defaultQueryField",
						"propertyType": "text",
						"propertyTooltip": "Name of the field"
					},
					{
						"propertyName": "directoryFactory",
						"propertyKeyword": "directoryFactory",
						"propertyType": "select",
						"propertyTooltip": "Can be used as an alternative to the directoryFactoryClass option",
						"options": [
							"",
							"standard",
							"encrypted"
						]
					},
					{
						"propertyName": "filterCacheLowWaterMark",
						"propertyKeyword": "filterCacheLowWaterMark",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"defaultValue": 1024
					},
					{
						"propertyName": "filterCacheHighWaterMark",
						"propertyKeyword": "filterCacheHighWaterMark",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"defaultValue": 2048
					},
					{
						"propertyName": "directoryFactoryClass",
						"propertyKeyword": "directoryFactoryClass",
						"propertyType": "text",
						"propertyTooltip": "Specifies the fully-qualified name of the directory factory. Use in place of the directoryFactory option for directory factories other than the standard or encrypted directory factory."
					},
					{
						"propertyName": "mergeMaxThreadCount",
						"propertyKeyword": "mergeMaxThreadCount",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"propertyTooltip": "Must configure with mergeMaxMergeCount"
					},
					{
						"propertyName": "mergeMaxMergeCount",
						"propertyKeyword": "mergeMaxMergeCount",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"propertyTooltip": "Must configure with mergeMaxThreadCount"
					},
					{
						"propertyName": "ramBufferSize",
						"propertyKeyword": "ramBufferSize",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"defaultValue": 512
					},
					{
						"propertyName": "realtime",
						"propertyKeyword": "realtime",
						"propertyType": "checkbox"
					}
				]
			},
			{
				"propertyName": "Options",
				"propertyType": "block",
				"propertyKeyword": "searchIndexOptions",
				"propertyTooltip": "",
				"dependency": {
					"type": "and",
					"values":[
						{
							"key": "searchIndex",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"level": "model",
								"key": "dbVersion",
								"value": "Astra DB"
							}
						}
					]
				},
				"structure": [
					{
						"propertyName": "recovery",
						"propertyKeyword": "recovery",
						"propertyType": "checkbox",
						"propertyTooltip": "if the search core is unable to load due to corrupted index, recovers it by deleting and recreating the index. The deleteAll flag is set based on the recovery flag unless deleteAll is specifically set."
					},
					{
						"propertyName": "reindex",
						"propertyKeyword": "reindex",
						"propertyType": "checkbox",
						"defaultValue": true,
						"propertyTooltip": "reindexes the data. Keeps the current index (accepting reads) while the new index is building."
					},
					{
						"propertyName": "lenient",
						"propertyKeyword": "lenient",
						"propertyType": "checkbox",
						"propertyTooltip": "The SchemaGenerator silently ignores fields of type SpatialRecursivePrefixTreeFieldType (CQL PointType)."
					}
				]
			}
		]
	}
]
